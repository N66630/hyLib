# -*- coding: utf-8 -*-
"""
Created on Thu Nov  9 21:51:13 2017

@author: Administrator
"""

 
## string
str1 = "i LOVE lOve 9999"
str2 = "0928.999999"
str3 = "ABC"
print ("\r開頭轉大寫")
print (str1.capitalize())
print ("全部轉小寫")
print (str1.casefold())
print ("原始變數中的值不變")
print (str1)
print ("置中")
print ('[' + str1.center(40) +'] (ljust, rjust)')
print ("出現字數")
print (str1.count('O',0, len(str1)))
print ("判斷子字串在母字串中出現次數")
print ("編碼")
print (str1.encode(encoding='utf-8', errors='strict'))
print ("判斷字串結束的子字串 (endwith / startwidth)")
print (str1.endswith('OV', 0, 5))
print ("找子字串位置 (find) (rfind), 不存在返回 -1")
print (str1.find('Ov', 0, len(str1)))
print ("找子字串位置 (index) (rindex), 不存在 throw exception")
print (str1.index('Ov', 0, len(str1)))
print ("isalnum() : 如果字串中至少有一個字母且都是由字母與數字組成則返回 true, 否則返回 false")
print (str1.isalnum())
print ("isalpha() : 如果字串中至少有一個字母且都是由字母組成則返回 true, 否則返回 false")
print (str2.isalpha())
print ("isdecimal() : 如果字串中只包含十進制數字則返回 true, 否則返回 false")
print (str2.isdecimal())
print ("isdigit() : 如果字串中只包含數字則返回 true, 否則返回 false")
print (str2.isdigit())
print ("islower() : 如果字串中至少有一個字元且全部字元都是小寫則返回 true, 否則返回 false")
print (str2.islower())
print ("isnumeric() : 如果字串中只包含數字則返回 true, 否則返回 false")
print (str2.isnumeric())
print ("isdigit() : 如果字串中至少有一個字元且全部字元都是小寫則返回 true, 否則返回 false")
print (str2.isdigit())
print ("join() : 原字串插入引數中的每一個字元")
print (str3.join('123'))
print ("lstrip(), rstrip(), strip() : 不帶引數默認空格")
print (str3.lstrip('A').rstrip())
print (str3.strip('C'))
print ("partition() (rpartition) : 轉成三維的 tuple")
print (str1.partition('Ov'))
print ("replace() : replace 最多的次數 (如果有找到比數字中多的話, 則超過的不會 replace")
print (str1.replace('9', 'x', 2))
print ("split() : 預設為空白字元")
print (str1.split())
print (str1.split('O', -1))
print ("\rtranslate : 替換 (不知道與 replace 有什麼不同)")
print (str1.translate(str.maketrans('O','K')))
print ("ljust(rjust) : 左對齊, 長度不足右邊補空格")
print (str1.ljust(40))
print ("\r")
print ("zfill(width) : 返回長度為 width 的字串, 右邊不足的補 0")
print ("title() : 所有單詞第一個字元都轉為大寫, 其它都轉為小寫")
print ("swapcase() : 翻轉大小寫")
print ("isspace() : 判斷字串是否只包含空白字元")
print ("istitle() / isupper() / islower()")

print ("\r")
print ("\r\rstring format")
print ("{0} {1} {2}".format("I", "Love", "You"))
print ("\r\未知參數 ({0}, {1} ..) 一定要在關鍵參數之前")
print ("{0} {b} {c}".format("I", b="Love", c="You"))
print ("{0} {{{b}}} {c}".format("{I}", b="Love", c="You"))

print ("\r")
print ("\rstring 數值格式化 (帽號)")
print ("{0:.2f} {1}".format(2.12345, "GB"))
print ("{0:.2f} {1}".format(0.12e-1, "GB"))

print ("\r%c (格式化 ascii 碼轉換) -> 透過 % 號轉換 ascii")
print ('%c %c %c' % (97,98,99))
print ("\r%s (格式化 string) -> 透過 % 號轉換字串 (沒什意義)")
print ('%s' % "I love you")
print ("\r%d (格式化整數) -> 透過 % 號轉換")
print ('%d + %d = %d' % (4,5,4+5))
print ("\r%o (格式化無符號 8 進制數值) -> 透過 % 號轉換")
print ('%o' % 10)
print ("\r%x (格式化無符號 16 進制數值, 小寫輸出) -> 透過 % 號轉換")
print ('%x' % 10)
print ("\r%X (格式化無符號 16 進制數值, 寫輸出) -> 透過 % 號轉換")
print ('%X' % 10)
print ("\r%f (格式化浮點數, 可指定小數點後的精度) -> 透過 % 號轉換")
print ('%f' % 23.345)
print ('小數點左側的值為總長度, 右側為小數點位數')
print ('%0.1f' % 23.345)
print ('前面會有三個空字串(靠右對齊)')
print ('%10.3f' % 23.345)
print ('後面會有三個空字串 (負號靠左對齊)')
print ('%-10.3f' % 23.345)
print ('%+10.3f' % 23.345)
print ("\r%e (科學記號格式化) -> 透過 % 號轉換")
print ('%e' % 23.345)
print ("\r顯示八進制符號")
print ('%#o' % 10)
print ("\r顯示十六進制符號")
print ('%#x' % 10)
print ("\r顯示十進制 (沒有符號), 並在前面補0到總長度為10")
print ('%010d' % 5)
print ("\r顯示十進制 (沒有符號, 負號靠右對齊, 但右方補空白而非 0)")
print ('%-010d' % 5)
